apiVersion: apps/v1
kind: Deployment
metadata:
  name: pokedex-postgres
  namespace: pokedex   # <--- namespace añadido
  labels:
    app: pokedex
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pokedex
      tier: database
  template:
    metadata:
      labels:
        app: pokedex
        tier: database
    spec:
      containers:
      - name: postgres
        image: kind-registry:5000/postgres:13-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "pokedex_db"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pokedex-secrets
              key: postgres-password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d/init-db.sql
          subPath: init-db.sql
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-script
        configMap:
          name: postgres-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: pokedex-postgres
  namespace: pokedex   # <--- namespace añadido
  labels:
    app: pokedex
    tier: database
spec:
  selector:
    app: pokedex
    tier: database
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: pokedex   # <--- namespace añadido
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

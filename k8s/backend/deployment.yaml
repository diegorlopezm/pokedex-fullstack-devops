apiVersion: apps/v1
kind: Deployment
metadata:
  name: pokedex-backend
  labels:
    app: pokedex
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pokedex
      tier: backend
  template:
    metadata:
      labels:
        app: pokedex
        tier: backend
    spec:
      containers:
      - name: backend
        image: diegorlopez/pokedex-backend:1.6  # ‚Üê Tu imagen en DockerHub
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: REDIS_HOST
          value: "pokedex-redis"
        - name: POSTGRES_HOST
          value: "pokedex-postgres"
        - name: POSTGRES_DB
          value: "pokedex_db"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pokedex-secrets
              key: postgres-password
        - name: ALLOWED_ORIGINS
          value: "http://pokedex-frontend,http://localhost:3000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: pokedex-backend
  labels:
    app: pokedex
    tier: backend
spec:
  selector:
    app: pokedex
    tier: backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
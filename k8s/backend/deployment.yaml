apiVersion: apps/v1
kind: Deployment
metadata:
  name: pokedex-backend
  labels:
    app: pokedex
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pokedex
      tier: backend
  template:
    metadata:
      labels:
        app: pokedex
        tier: backend
    spec:
      containers:
      - name: backend
        image: kind-registry:5000/pokedex-backend:1.7.1-fd-fix 
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: REDIS_HOST
          value: "pokedex-redis"
        - name: POSTGRES_HOST
          value: "pokedex-postgres"
        - name: POSTGRES_DB
          value: "pokedex_db"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pokedex-secrets
              key: postgres-password
        - name: ALLOWED_ORIGINS
          value: "http://pokedex-frontend,http://localhost:3000"
        - name: UVICORN_LOG_LEVEL
          value: "warning"
        - name: UVICORN_ACCESS_LOG
          value: "false"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        startupProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
        command: ["uvicorn"]
        args: [
          "backend.app:app",
          "--host", "0.0.0.0",
          "--port", "8000",
          "--log-level", "$(UVICORN_LOG_LEVEL)",
          "--no-access-log",
          "--limit-max-requests", "10000",
          "--timeout-keep-alive", "5"
        ]
---
apiVersion: v1
kind: Service
metadata:
  name: pokedex-backend
  labels:
    app: pokedex
    tier: backend
spec:
  selector:
    app: pokedex
    tier: backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP